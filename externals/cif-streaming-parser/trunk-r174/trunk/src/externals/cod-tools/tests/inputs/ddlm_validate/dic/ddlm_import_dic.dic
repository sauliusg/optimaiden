#\#CIF_2.0
##############################################################################
#                                                                            #
#               IMPORTING DICTIONARY FOR TESTING PURPOSES                    #
#                                                                            #
##############################################################################
data_IMPORTING_DIC

    _dictionary.title            IMPORTING_DIC
    _dictionary.class            Instance
    _dictionary.version          0.0.2
    _dictionary.date             2019-03-28
    _dictionary.uri              http://www.example.org/ddlm_importing.dic
    _dictionary.ddl_conformance  3.11.10
    _dictionary.namespace        ImportingDic
    _description.text
;
    This dictionary contains import statements for validator testing purposes.
;
    loop_
    _dictionary_audit.version
    _dictionary_audit.date
    _dictionary_audit.revision
    0.0.2 2019-03-28 'Correcting various naming mistakes.'
    0.0.1 2018-05-30 'Creating the dictionary.'

    _import.get                  []

save_IMPORTING_PARENT
    _definition.id               IMPORTING_PARENT
    _definition.scope            Category
    _definition.class            Head
    _definition.update           2018-05-30
    _description.text
;
    This category is parent of all other categories in the IMPORTING_DIC
    dictionary.
;
    _name.category_id            IMPORTING_DIC
    _name.object_id              IMPORTING_PARENT
    _import.get                  []
   # _import.get                 [{"file":"cif_core.dic" "save":"CIF_CORE" "mode":"Full"}]
save_

save_IMPORTING_CHILD_CATEGORY
    _definition.id               IMPORTING_CHILD_CATEGORY
    _definition.scope            Category
    _definition.class            Set
    _definition.update           2018-05-30
    _description.text
;
    A child category with an illegal import statement.
;
    _name.category_id            IMPORTING_PARENT
    _name.object_id              IMPORTING_CHILD_CATEGORY
    _import.get                  []
save_
